File Management & I/O Management: Disk Scheduling (FCFS, SCAN, C-SCAN):


#include <stdio.h>
#include <stdlib.h>

#define MAX_REQUESTS 100

void fcfs(int requests[], int n, int head) {
    printf("FCFS Disk Scheduling Algorithm:\n");
    printf("Sequence of disk head movements: ");
    for (int i = 0; i < n; ++i) {
        printf("%d ", requests[i]);
    }
    printf("\n");
}

void scan(int requests[], int n, int head, int direction, int size) {
    printf("SCAN Disk Scheduling Algorithm:\n");
    printf("Sequence of disk head movements: ");
    int total_movements = 0;
    if (direction == 0) { // Towards lower cylinders
        printf("%d ", head);
        for (int i = head; i >= 0; --i) {
            printf("%d ", i);
            total_movements++;
        }
        printf("0 ");
        for (int i = 1; i < size; ++i) {
            printf("%d ", i);
            total_movements++;
        }
    } else { // Towards higher cylinders
        printf("%d ", head);
        for (int i = head; i < size; ++i) {
            printf("%d ", i);
            total_movements++;
        }
        printf("%d ", size - 1);
        for (int i = size - 2; i >= 0; --i) {
            printf("%d ", i);
            total_movements++;
        }
    }
    printf("\nTotal movements: %d\n", total_movements);
}

void cscan(int requests[], int n, int head, int size) {
    printf("C-SCAN Disk Scheduling Algorithm:\n");
    printf("Sequence of disk head movements: ");
    int total_movements = 0;
    printf("%d ", head);
    if (requests[0] > head) { // Towards higher cylinders
        for (int i = head; i < size; ++i) {
            printf("%d ", i);
            total_movements++;
        }
        printf("%d ", size - 1);
        printf("0 ");
        for (int i = 1; i < n; ++i) {
            printf("%d ", requests[i]);
            total_movements++;
        }
    } else { // Towards lower cylinders
        for (int i = head; i >= 0; --i) {
            printf("%d ", i);
            total_movements++;
        }
        printf("0 ");
        printf("%d ", size - 1);
        for (int i = size - 2; i >= 0; --i) {
            printf("%d ", i);
            total_movements++;
        }
    }
    printf("\nTotal movements: %d\n", total_movements);
}

int main() {
    int requests[MAX_REQUESTS], n, head, size, direction;
    
    printf("Enter the total number of requests: ");
    scanf("%d", &n);
    
    printf("Enter the requests: ");
    for (int i = 0; i < n; ++i) {
        scanf("%d", &requests[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &head);

    printf("Enter the total number of cylinders: ");
    scanf("%d", &size);

    printf("Enter the direction (0 for towards lower cylinders, 1 for towards higher cylinders): ");
    scanf("%d", &direction);

    // Perform disk scheduling using each algorithm
    fcfs(requests, n, head);
    printf("\n");
    scan(requests, n, head, direction, size);
    printf("\n");
    cscan(requests, n, head, size);

    return 0;
}
